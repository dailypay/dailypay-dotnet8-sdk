name: 'Publish .NET 8 SDK'
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: read
  packages: write
  id-token: write
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get commit author
        id: commit_author
        run: |
          AUTHOR=$(git log -1 --pretty=format:'%an')
          echo "author=$AUTHOR" >> $GITHUB_OUTPUT

      - name: Check if commit is autogenerated
        id: check_autogen
        run: |
          if [ "${{ steps.commit_author.outputs.author }}" = "github-actions[bot]" ]; then
            echo "autogen=true" >> $GITHUB_OUTPUT
          else
            echo "autogen=false" >> $GITHUB_OUTPUT
            echo "This PR was not autogenerated by Speakeasy's Generate SDK GitHub Action. Skipping publish steps."

      - name: Setup .NET SDK
        if: steps.check_autogen.outputs.autogen == 'true'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        if: steps.check_autogen.outputs.autogen == 'true'
        run: dotnet restore ./src/DailyPay/SDK/DotNet8/DailyPay.SDK.DotNet8.csproj

      - name: Build SDK
        if: steps.check_autogen.outputs.autogen == 'true'
        run: dotnet build ./src/DailyPay/SDK/DotNet8/DailyPay.SDK.DotNet8.csproj --configuration Release --no-restore

      - name: Pack SDK
        if: steps.check_autogen.outputs.autogen == 'true'
        run: dotnet pack ./src/DailyPay/SDK/DotNet8/DailyPay.SDK.DotNet8.csproj --configuration Release --no-build --output ./nupkg

      - name: Publish to GitHub Packages
        if: steps.check_autogen.outputs.autogen == 'true'
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/dailypay/index.json" --name github --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
          dotnet nuget push ./nupkg/*.nupkg --source github --skip-duplicate
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tag:
    if: needs.publish.outputs.autogen == 'true'
    uses: speakeasy-api/sdk-generation-action/.github/workflows/tag.yaml@v15
    needs: publish
    with:
      registry_tags: main
    secrets:
      github_access_token: ${{ secrets.GITHUB_TOKEN }}
      speakeasy_api_key: ${{ secrets.SPEAKEASY_API_KEY }}